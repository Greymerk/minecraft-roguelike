package com.greymerk.roguelike.editor.factories;

import java.util.function.Predicate;

import com.greymerk.roguelike.editor.BlockContext;
import com.greymerk.roguelike.editor.Coord;
import com.greymerk.roguelike.editor.Fill;
import com.greymerk.roguelike.editor.IBlockFactory;
import com.greymerk.roguelike.editor.IWorldEditor;
import com.greymerk.roguelike.editor.blocks.Air;

import net.minecraft.util.math.random.Random;

/**
 * This BlockFactory serves the special purpose of
 * creating solid floor unless it's being placed in
 * mid air, in which case there will be holes.
 * 
 * This type is automatically generated by the BlockSet
 * class and thus never needs to be directly instantiated.
 * 
 * @author brian
 */
public class BlockFloor extends BlockBase implements IBlockFactory{

	private IBlockFactory floor;
	private IBlockFactory bridge;
	
	public static BlockFloor of(IBlockFactory floor) {
		return new BlockFloor(floor);
	}
	
	public BlockFloor(IBlockFactory floor) {
		this.floor = floor;
		BlockWeightedRandom bridge = new BlockWeightedRandom();
		bridge.addBlock(floor, 10);
		bridge.addBlock(Air.get(), 1);
		this.bridge = bridge;
	}
	
	@Override
	public boolean set(IWorldEditor editor, Random rand, Coord pos, Predicate<BlockContext> p) {
		return floor.set(editor, rand, pos, Fill.SOLID.and(p))
		    || bridge.set(editor, rand, pos, Fill.AIR.and(p));
	}

	@Override
	public boolean set(IWorldEditor editor, Random rand, Coord pos) {
		return floor.set(editor, rand, pos, Fill.SOLID)
			|| bridge.set(editor, rand, pos, Fill.AIR);
	}
}
